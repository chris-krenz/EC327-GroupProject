# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

name: Keep clone up to date
variables:
  REMOTE_ADDR: 'https://github.com/chris-krenz/EC327-GroupProject.git'
stages:
  - stage: running_git_commands
    displayName: running_git_commands
    jobs:
      - job: initiate
        displayName: initiate
        continueOnError: false
        steps:
        - checkout: self
          clean: true
          persistCredentials: true
          displayName: run_commands
        - bash: | 
            git config --global user.email 'chris.dean.krenz@gmail.com'
            git config --global user.name 'chris-krenz'
            git checkout main
            git remote add EC327-GroupProject $(REMOTE_ADDR)
            git fetch EC327-GroupProject main
            git reset --hard EC327-GroupProject/main
            git pull --rebase EC327-GroupProject main
            git push --force origin

#trigger:
#- main
#
#pool:
#  vmImage: ubuntu-latest
#
#steps:
#- script: |
#    make
#  displayName: 'make'

# trigger:
#   branches:
#     include:
#     - '*'
# variables:
#   system_accesstoken: $(System.AccessToken)

# pool: Default

# steps:
# - checkout: self
#   persistCredentials: true    #Allow scripts to access the system token
#   clean: true 

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       git config --global user.email "chris.dean.krenz@gmail.com"
#       git config --global user.name "chris-krenz"
#       git branch -r | grep -v '\->' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done
#       git remote add https://github.com/chris-krenz/EC327-GroupProject.git
#       git branch -r | grep -v '\->' | while read remote; do git -c http.extraheader="AUTHORIZATION: bearer $(system_accesstoken)" push -u vsts "${remote#origin/}"; done
