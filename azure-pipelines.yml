# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

name: Keep clone up to date
variables:
  REMOTE_ADDR: 'https://EC327-GroupProject@dev.azure.com/EC327-GroupProject/Main/_git/Main'
  SYSTEM_ACCESSTOKEN: $(System.AccessToken)

pool: Default

# stages:
#   - stage: running_git_commands
#     displayName: running_git_commands
#     jobs:
#       - job: initiate
#         displayName: initiate
#         continueOnError: false
# git checkout main   # place below username below
# git fetch github_project main   # place before reset

steps:
- checkout: self
  clean: true
  persistCredentials: true
  displayName: run_commands

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      git config --global user.email 'ckrenz@bu.edu'
      git config --global user.name 'chris-krenz'
      git remote add github_project $(REMOTE_ADDR)
      git reset --hard github_project/main
      git pull --rebase github_project main
      git -c http.extraheader='AUTHORIZATION: bearer $(SYSTEM_ACCESSTOKEN)' push --force $(REMOTE_ADDR)

#trigger:
#- main
#
#pool:
#  vmImage: ubuntu-latest
#
#steps:
#- script: |
#    make
#  displayName: 'make'

# trigger:
#   branches:
#     include:
#     - '*'
# variables:
#   system_accesstoken: $(System.AccessToken)

# pool: Default

# steps:
# - checkout: self
#   persistCredentials: true    #Allow scripts to access the system token
#   clean: true 

# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: |
#       git config --global user.email "chris.dean.krenz@gmail.com"
#       git config --global user.name "chris-krenz"
#       git branch -r | grep -v '\->' | while read remote; do git branch --track "${remote#origin/}" "$remote"; done
#       git remote add https://github.com/chris-krenz/EC327-GroupProject.git
#       git branch -r | grep -v '\->' | while read remote; do git -c http.extraheader="AUTHORIZATION: bearer $(system_accesstoken)" push -u vsts "${remote#origin/}"; done
